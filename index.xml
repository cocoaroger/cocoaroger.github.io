<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cocoaroger</title>
    <link>https://cocoaroger.github.io/</link>
    <description>Recent content on cocoaroger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Apr 2018 16:41:53 +0800</lastBuildDate>
    
	<atom:link href="https://cocoaroger.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iOS开发简历</title>
      <link>https://cocoaroger.github.io/post/resume/</link>
      <pubDate>Sun, 01 Apr 2018 16:41:53 +0800</pubDate>
      
      <guid>https://cocoaroger.github.io/post/resume/</guid>
      <description>联系方式  手机：17338665021 Email：coacoaroger@gmail.com  个人信息  吴宣强/男/1990 本科/重庆理工大学软件工程系 工作年限：5年 技术博客：https://cocoaroger.github.io/ Github：https://github.com/cocoaroger 期望职位：iOS开发工程师 期望城市：重庆/成都  工作经历 宁波搜布信息科技有限公司(上海)(2016.6 ~ 2018.1) 搜布APP  负责重构项目架构，制定OC编写规范，使代码更易于维护，便于多人协同开发 实践组件化开发，通过中间件的方式声明接口，提高项目的可读性和可维护性 开发登录注册优化、布友圈、店铺主页功能模块 布友圈模块中，使用了YYKit的异步加载方案，保证列表在多图、多文本的复杂情况下仍保持60fps 店铺主页中遇到ScrollView滚动冲突，最终采用通知的方式，在合适的滚动时机，通知内外ScrollView是否可滚动，从而达到类似淘宝店铺主页效果  CRM(Swift)  独立负责项目架构和功能开发 熟练运用Swift各种特性，函数式编程、optional、enum定义网络请求接口、typealias等 版本迭代优化  上海友闲信息科技有限公司(2014.12 ~ 2015.8) 玩票卖家APP  负责项目架构和功能开发 使用科大讯飞语音做类似滴滴抢单播报 版本迭代优化  重庆汇展网络技术有限公司(2014.12 ~ 2015.8) 淘会场  负责大部分封装UI组件和功能开发 版本迭代优化  重庆掌龙科技有限公司(2013.7 ~ 2014.12) 乐途直营店  独立负责项目架构和功能开发 版本迭代优化  技能清单  熟练使用Objective-C、Swift，了解JavaScript、Kotlin、Java、React Native 熟悉Objective-C内存管理机制、Runtime、Runloop 熟悉OC第三方库：AFNetworking、SDWebImage、Masonry、MJRefresh、MJExtention等 熟悉Swift第三方库：Alamofire、Kingfisher、SnapKit、SwiftyJSON、ObjectMapper等 版本管理：Git、SVN、CocoaPods 团队工具：墨刀、Teambition、Worktile、Trello、Bugtags 开放平台：微信、支付宝、极光、个推、神策  致谢 感谢您花时间阅读我的简历，期待能有机会和您共事。</description>
    </item>
    
    <item>
      <title>使用 fastlane</title>
      <link>https://cocoaroger.github.io/post/use-fastlane/</link>
      <pubDate>Tue, 26 Sep 2017 14:11:54 +0800</pubDate>
      
      <guid>https://cocoaroger.github.io/post/use-fastlane/</guid>
      <description>以下是我集成 fastlane 的过程
安装 fastlane sudo gem install fastlane
初始化 fastlane cd 到项目目录 执行 fastlane init
两个主要文件配置 fastlane/Appfile 配置 App 基本信息 app_identifier &amp;quot;com.cocoaroger.appstore&amp;quot; # The bundle identifier of your app apple_dev_portal_id &amp;quot;&amp;quot; # Apple Developer Account itunes_connect_id &amp;quot;&amp;quot; # iTunes Connect Account team_id &amp;quot;&amp;quot; # Developer Portal Team ID itc_team_id &amp;quot;&amp;quot; # iTunes Connect Team ID for_lane :adhoc do app_identifier &amp;quot;com.cocoaroger.test&amp;quot; end for_lane :appstore do app_identifier &amp;quot;com.cocoaroger.appstore&amp;quot; end  fastlane/Fastfile 定制我们的自动化脚本 我这里的 appstore 只是打包了，没有直接传到 itunes connect</description>
    </item>
    
    <item>
      <title>Hugo 自动化部署脚本 deploy.py</title>
      <link>https://cocoaroger.github.io/post/hugo-deploy/</link>
      <pubDate>Sat, 26 Aug 2017 17:28:30 +0800</pubDate>
      
      <guid>https://cocoaroger.github.io/post/hugo-deploy/</guid>
      <description>Hugo 自动化部署脚本 deploy.py 是 coderzh 写的
脚本路径：https://github.com/coderzh/coderzh-hugo-blog/blob/master/deploy.py
原理 deploy.py 会自动执行 hugo 命令生成静态站点，然后将生成的文件拷贝到上层的一个目录里，然后，在那个目录里将文件 push 到你指定的 Git Repository 里。
使用方法  将 deploy.py 放到你的 Hugo 站点目录。（和 config.yaml 等文件放一起） 编辑 deploy.py 文件，修改你要部署到的 Git Repository：  GIT_REPO = [ # [别名, 分支名, Git Repo 路径] [&#39;origin&#39;, &#39;gh-pages&#39;, &#39;git@github.com:coderzh/hugo-blog-deployed.git&#39;], [&#39;gitcafe&#39;, &#39;gh-pages&#39;, &#39;git@coding.net:coderzh/coderzh-hugo-blog.git&#39;], ] # 部署到哪里，相对上一级目录。比如下面的配置，会部署到 ../gh-pages 目录里 DEPLOY_DIR = &#39;gh-pages&#39;   如果你的网站需要指定皮肤，需要在 config 文件中指定 theme 。因为我的脚本在生成静态文件时并不会指定皮肤。  theme: &amp;quot;rapid&amp;quot;  第一次执行，使用 first 参数，它会做一些初始化的操作。并使用 -t 表示只是测试一下，并不会真的 push 。  python deploy.</description>
    </item>
    
    <item>
      <title>Objective-C Guide Style</title>
      <link>https://cocoaroger.github.io/post/oc-guide-style/</link>
      <pubDate>Sat, 26 Aug 2017 10:57:31 +0800</pubDate>
      
      <guid>https://cocoaroger.github.io/post/oc-guide-style/</guid>
      <description>Remember that code is read much more often than it is written, and that 80% of the lifetime cost of software goes to maintenance.
 在 搜布 与 racechao 一起整理
目录  参考和引用 快捷键的使用 命名规则  变量命名 常量命名 类命名 类属性定义 方法的声明和定义 方法中 {} 的位置  字面量 布尔 枚举类型 Block Protocols 代码组织 Xcode 工程 Best Practices  参考和引用  纽约时报 Objective-C 规范指南  快捷键的使用  快速生成注释格式化：在声明的上一行 &amp;ldquo;option+command+/&amp;rdquo; 格式化代码：选中需要格式化的代码 &amp;ldquo;control+i&amp;rdquo;  命名规则 变量命名  变量名应使用容易意会的全称，采用驼峰命名法，且首字母小写。 变量命名不允许出现中文拼音，应该使用英文对变量进行命名。  常量命名  const  使用小写“k”作为前缀,首字母大写来分割单词。如: kInvalidHandle。 如果是NotificationName常量，不要使用k开头，以Notification结尾，如：UITextFieldDidBeginEditingNotification  // 规范事例 static const NSTimeInterval kRWTTutorialViewControllerNavigationFadeAnimationDuration = 0.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cocoaroger.github.io/about/</link>
      <pubDate>Fri, 11 Aug 2017 15:52:14 +0800</pubDate>
      
      <guid>https://cocoaroger.github.io/about/</guid>
      <description>目前从事 iOS
此处记录一些思考和总结</description>
    </item>
    
  </channel>
</rss>